//
// GENERATED by ll1gen : Do not modify (or on your own risk)
//
#ifndef _LL1GEN_HELLORESPONSE_HPP_
#define _LL1GEN_HELLORESPONSE_HPP_

#include "json_utils.hpp"

//ll1gen::include_begin

//ll1gen::include_end

namespace geryon { namespace examples { namespace helloworld { 

class HelloResponse {
public:
    //ll1gen::constructor_begin

    //ll1gen::constructor_end
    HelloResponse() {}
    ~HelloResponse() {}

#ifndef LL1GEN_DISABLE_STANDARD_GETTERS
    //ll1gen::getters_begin

    
    std::string get_firstName() const { return _firstName; }

    void set_firstName( const std::string & __val) { _firstName = __val; }



    std::string get_lastName() const { return _lastName; }

    void set_lastName( const std::string & __val) { _lastName = __val; }



    std::string get_greetings() const { return _greetings; }

    void set_greetings( const std::string & __val) { _greetings = __val; }


//ll1gen::getters_end
#endif

#ifndef LL1GEN_DISABLE_REFERENCE_GETTERS
    //ll1gen::ref_getters_begin

        std::string & firstName() { return _firstName; }


    std::string & lastName() { return _lastName; }


    std::string & greetings() { return _greetings; }


//ll1gen::ref_getters_end
#endif

    friend std::ostream& operator<< (std::ostream& __stream, const HelloResponse& __bean);
    friend std::istream& operator>> (std::istream& __stream, HelloResponse& __bean);
private:
    //ll1gen::field_decl_begin

    std::string _firstName;
std::string _lastName;
std::string _greetings;
//ll1gen::field_decl_end
};

std::ostream& operator<< (std::ostream& __stream, const HelloResponse& __bean) {
    __stream << "{";
    //ll1gen::field_ostream_begin

        __stream << "\"firstName\":\"" << ll1gen::json::encodeJsonString(__bean._firstName) << "\"";


__stream << ",";
    __stream << "\"lastName\":\"" << ll1gen::json::encodeJsonString(__bean._lastName) << "\"";


__stream << ",";
    __stream << "\"greetings\":\"" << ll1gen::json::encodeJsonString(__bean._greetings) << "\"";


//ll1gen::field_ostream_end
    __stream << "}";
    return __stream;
}

std::istream& operator>> (std::istream& __stream, HelloResponse& __bean) {
    char __startObjectMrk = ll1gen::json::lookUpAndEat(__stream, "{n");
    if(__startObjectMrk == 'n') {
        ll1gen::json::lookUpTokenRemainder(__stream, __startObjectMrk, "null");
        return __stream;
    }
    for(unsigned int __i = 0; __i < 3; ++__i) {
        ll1gen::json::lookUpAndEat(__stream, "\"");
        std::string __propertyName = ll1gen::json::lookUp(__stream, "\"");
        ll1gen::json::lookUpAndEat(__stream, ":");

        //ll1gen::field_istream_begin

            if(__propertyName == "firstName") {
        if(!ll1gen::json::parseString(__stream, __bean._firstName)) {
            throw new std::runtime_error("JSON: null not supported for field firstName (string). Check definition.");
        }
    }

else
    if(__propertyName == "lastName") {
        if(!ll1gen::json::parseString(__stream, __bean._lastName)) {
            throw new std::runtime_error("JSON: null not supported for field lastName (string). Check definition.");
        }
    }

else
    if(__propertyName == "greetings") {
        if(!ll1gen::json::parseString(__stream, __bean._greetings)) {
            throw new std::runtime_error("JSON: null not supported for field greetings (string). Check definition.");
        }
    }

//ll1gen::field_istream_end

        if('{' == ll1gen::json::lookUpAndEat(__stream, "},")) {
            break;
        }
    }
    return __stream;
}

} } } 

#endif
